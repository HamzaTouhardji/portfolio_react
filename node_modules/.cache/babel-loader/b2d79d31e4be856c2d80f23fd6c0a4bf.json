{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar propTypes = {\n  children: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]),\n  className: _propTypes2.default.string,\n  text: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  overlap: _propTypes2.default.bool,\n  noBackground: _propTypes2.default.bool\n};\n\nvar Badge = function Badge(props) {\n  var children = props.children,\n      className = props.className,\n      text = props.text,\n      overlap = props.overlap,\n      noBackground = props.noBackground,\n      rest = _objectWithoutProperties(props, ['children', 'className', 'text', 'overlap', 'noBackground']); // No badge if no children\n  // TODO: In React 15, we can return null instead\n\n\n  if (!_react2.default.Children.count(children)) return _react2.default.createElement('noscript', null);\n  var element = typeof children === 'string' ? _react2.default.createElement('span', null, children) : _react2.default.Children.only(children); // No text -> No need of badge\n\n  if (text === null || typeof text === 'undefined') return element;\n  return _react2.default.cloneElement(element, _extends({}, rest, {\n    className: (0, _classnames2.default)(className, element.props.className, 'mdl-badge', {\n      'mdl-badge--overlap': !!overlap,\n      'mdl-badge--no-background': !!noBackground\n    }),\n    'data-badge': text\n  }));\n};\n\nBadge.propTypes = propTypes;\nexports.default = Badge;","map":null,"metadata":{},"sourceType":"script"}